#!/usr/bin/env bash

# USAGE (for a tld, eg: "slime.church"):
# $ ./bin/configure-ddclient slimechurch

# SETUP
pushd `pwd` # save original path
cd `dirname "$0"` # cd to script path
./common/check-root || exit $? # enforce root
./common/check-dependencies "shyaml ddclient" || exit $?

# CONFIGURE

if [ -e /var/cache/ddclient/ddclient.cache ]
then
  echo "----- claring cache in /var/cache/ddclient/ddclient.cache"
  rm /var/cache/ddclient/ddclient.cache
fi

echo "----- deleting old contents of /etc/ddclient.conf"

rm /etc/ddclient.conf
touch /etc/ddclient.conf
echo "# /etc/ddclient.conf" >> /etc/ddclient.conf

echo "----- writing new configs from conf.yaml..."

domains=`cat conf.yaml | shyaml keys domains`

get-ddns-config(){
  domain=$1; config=$2
  default=`cat conf.yaml | shyaml get-value ddns.defaults.${config}`
  cat conf.yaml | shyaml get-value domains.${domain}.ddns.${config} $default
}

for domain in $domains
do
  echo "----- adding configuration for ${domain}..."

  hostname=`cat conf.yaml | shyaml get-value domains.${domain}.hostname`
  subdomains=`cat conf.yaml | shyaml get-values domains.${domain}.subdomains`

  web=`get-ddns-config ${domain} web`
  protocol=`get-ddns-config ${domain} protocol`
  server=`get-ddns-config ${domain} server`
  login=`get-ddns-config ${domain} login`
  password=`get-ddns-config ${domain} password`

  echo "" >> /etc/ddclient.conf
  echo "######################################" >> /etc/ddclient.conf
  echo "# config for ${hostname}" >> /etc/ddclient.conf
  echo "######################################" >> /etc/ddclient.conf
  echo "" >> /etc/ddclient.conf
  echo "use=web, web=${web}" >> /etc/ddclient.conf
  echo "ssl=yes" >> /etc/ddclient.conf
  echo "protocol=${protocol}" >> /etc/ddclient.conf
  echo "server=${server}" >> /etc/ddclient.conf
  echo "login=${login}" >> /etc/ddclient.conf
  echo "password=${password}" >> /etc/ddclient.conf

  echo "+++++ added configuration for ${hostname}"
done

echo "----- publishing new IP to remote nameserver"

ddclient

echo "----- configuring ddclient to run as daemon"

# *don't* run ddclient every time a new ppp connection is established
sed -i "s/run_ipup=\"true\"/run_ipup=\"false\"/g"  /etc/default/ddclient
# *do* run ddclient as a daemon
sed -i "s/run_daemon=\"false\"/run_ipup=\"true\"/g"  /etc/default/ddclient

echo "----- restarting ddclient"

systemctl restart ddclient

echo "+++++ ddclient configured! check your nameserver for new IP!"

# CLEANUP
popd
