#!/usr/bin/env bash

# USAGE (for a tld, eg: "slime.church"):
# $ ./bin/configure-ddclient slime.church

# SETUP
pushd `pwd` # save original path
cd `dirname "$0"` # cd to script path
../common/check-root || exit $? # enforce root

# TODO: (aguestuser|16 Apr 2018)
# extract this to yaml, so we can configure many hostnames
$remote_hostname=$1

# CONFIGURE

source ../.env/${remote_hostname}

if [ -e /var/cache/ddclient/ddclient.cache ]
then
  echo "----- claring cache in /var/cache/ddclient/ddclient.cache"
  rm /var/cache/ddclient/ddclient.cache
fi

echo "----- adding configuration for ${remote_hostname} to /etc/ddclient.conf"

echo "" >> /etc/ddclient.conf
echo "######################################" >> /etc/ddclient.conf
echo "# config for ${remote_hostname}" >> /etc/ddclient.conf
echo "######################################" >> /etc/ddclient.conf
echo "" >> /etc/ddclient.conf
echo "use=web, web=${DDNS_WEB}" >> /etc/ddclient.conf
echo "ssl=yes" >> /etc/ddclient.conf
echo "protocol=${DDNS_PROTOCOL}" >> /etc/ddclient.conf
echo "server=${DDNS_SERVER}" >> /etc/ddclient.conf
echo "login=${DDNS_LOGIN}" >> /etc/ddclient.conf
echo "password=${DDNS_PASSWORD}" >> /etc/ddclient.conf
echo "@.${remote_hostname}" >> /etc/ddclient.conf

echo "----- publishing new IP to remote nameserver"

ddclient

echo "----- configuring ddclient to run as daemon"

# *don't* run ddclient every time a new ppp connection is established
sed -i "s/run_ipup=\"true\"/run_ipup=\"false\"/g"  /etc/default/ddclient
# *do* run ddclient as a daemon
sed -i "s/run_daemon=\"false\"/run_ipup=\"true\"/g"  /etc/default/ddclient

echo "----- restarting ddclient"

systemctl restart ddclient

echo "+++++ ddclient configured! check your nameserver for new IP!"

# CLEANUP
popd
